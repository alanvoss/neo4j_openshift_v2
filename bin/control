#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH

function start() {
#  echo "Starting Neo4j cartridge"
#  touch $OPENSHIFT_NEO4J_STATE/control_start
#  touch $OPENSHIFT_NEO4J_STATE/mock_process
  client_result "about to start the server"
  neo4j start > $OPENSHIFT_NEO4J_DIR/data/log/server.log 2>&1 &
  client_result "started the server"
}

function stop() {
  echo "Stopping Neo4j cartridge"
  client_result "about to stop the server"
#  touch $OPENSHIFT_NEO4J_STATE/control_stop
  rm -f $OPENSHIFT_NEO4J_STATE/mock_process
  neo4j stop
}

function restart() {
#  touch $OPENSHIFT_NEO4J_STATE/control_restart
  client_result "about to restart the server"
  neo4j restart
}

function status() {
  client_result "This is client status output from the neo4j cartridge"
  client_result "about to status the server"
#  touch $OPENSHIFT_NEO4J_STATE/control_status
  neo4j status
}

function build() {
  echo "Building Neo4j cartridge"
  client_result "about to build the server"
#  touch $OPENSHIFT_NEO4J_STATE/control_build
  echo "Neo4j successfully built."
}

case "$1" in
  start)                start ;;
  stop)                 stop ;;
  restart)              restart ;;
  status)               status ;;
  reload)               touch $OPENSHIFT_NEO4J_STATE/control_reload ;;
  tidy)                 touch $OPENSHIFT_NEO4J_STATE/control_tidy ;;
  pre-build)            touch $OPENSHIFT_NEO4J_STATE/control_pre_build ;;
  build)                build ;;
  deploy)               touch $OPENSHIFT_NEO4J_STATE/control_deploy ;;
  post-deploy)          touch $OPENSHIFT_NEO4J_STATE/control_post_deploy ;;
  pre-snapshot)         touch $OPENSHIFT_NEO4J_STATE/control_pre_snapshot ;;
  post-snapshot)        touch $OPENSHIFT_NEO4J_STATE/control_post_snapshot ;;
  pre-restore)          touch $OPENSHIFT_NEO4J_STATE/control_pre_restore ;;
  post-restore)         touch $OPENSHIFT_NEO4J_STATE/control_post_restore ;;
  pre-repo-archive)     touch $OPENSHIFT_NEO4J_STATE/control_pre_repo_archive ;;
  update-configuration) touch $OPENSHIFT_NEO4J_STATE/control_update_configuration ;;
  *)           exit 0
esac
